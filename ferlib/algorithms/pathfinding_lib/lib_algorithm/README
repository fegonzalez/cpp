
# Content
# How to generate the library as a shared library
# How to generate the library as a static library
# How to test the library
# Executing valgrind (memcheck) over the Dijkstra code.



################################################################################
# Content
################################################################################

# sources

  BaseGraph.cc
  BaseGraph.h

	Implementation of Directed/Undirected graphs to be used as
   	inputs for path-finding algorithms.



  Dijkstra.cc
  Dijkstra.h

	Dijkstra algorithm implementation. Using DirectedGraph or
	UndirectedGraph as inputs.


# ./include

  Header (interface) files required by any user of the library:


  types.h 

	Basic types of the path_finding library. Types required by the
    	external users of the library (through the library interface)


  path_finding_facade.h  

	Basic path_finding_facade (interface) of the path_finding library. 


# ./test

  ./test/test_as_lib/

	src code & resources for every test of the Dijkstra implementation.
	See its README file.


# makefiles

  Makefile
  
        Make file to compile an generate the library as either static or dynamic
	library.
  	


# scripts/memcheck_to_each_test.sh
	
  Executing valgrind (memcheck) over the Dijkstra code.


################################################################################
# How to generate the library as a shared library
################################################################################

# (from the console window, at "lib_algorithm" dir)

  make shlib: generates "./lib/libpathfinding_shared.so"


################################################################################
# How to generate the library as a static library
################################################################################

# (from the console window, at "lib_algorithm" dir)

  make staticlib: generates "./lib/libpathfinding_static.a"


################################################################################
# How to test the library
################################################################################

See ./test/README


################################################################################
# Executing valgrind (memcheck) over the Dijkstra code.
################################################################################

# (from the console window, at "lib_algorithm" dir)

  cd ./scripts
  ./memcheck_to_each_test.sh


# memcheck is executed over every test
#
# For every test_file, a file "vgrind.TEST_FILE_NAME.out" is created
# with the report generated by memcheck.


################################################################################
